#include <GL/glut.h>
void myinit()
{
glClear( GL_COLOR_BUFFER_BIT );
glClearColor( 0, 0, 0, 1 );
gluOrtho2D(0,500,0,500);
}
void draw_pixel(int x,int y)
{
glBegin(GL_POINTS);
glVertex2d(x,y);
glEnd();
}
void bresenhams(int x1,int y1,int x2,int y2)
{
int dx,dy,x,y,p0,p,i,incx=1,incy=1;
dx=abs(x2-x1);
dy=abs(y2-y1);
if(x2<x1)incx=-1;
if(y2<y1)incy=-1;
x=x1;
y=y1;
if(dx>dy)
{
draw_pixel(x,y);
p=2*dy-dx;
for(i=0;i<dx;i++)
{
x=x+incx;
if(p>=0)
{
y=y+incy;
p=p+(2*dy-2*dx);
}
else
{
y=y;
p=p+2*dy;
}
draw_pixel(x,y);
}
}
else
{
draw_pixel(x,y);
p=2*dx-dy;
for(i=0;i<dy;i++)
{
y=y+incy;

2

if(p>=0)
{
x=x+incx;
p=p+(2*dx-2*dy);
}
else
{
x=x;
p=p+2*dx;
}
draw_pixel(x,y);
}
}
}
void display()
{
glColor3f( 1, 0, 0 );
bresenhams(20,20,300,50); //Slope <1
bresenhams(20,20,50,300); //slope >1
bresenhams(20,20,300,300); //slope=1
bresenhams(50,300,20,20); //Negative slope >1
bresenhams(300,50,20,20); // Negative slope <1
glFlush();
}
int main( int argc, char** argv )
{
glutInit(&argc, argv);
glutInitDisplayMode(GLUT_SINGLE);
glutInitWindowSize(500,500);
glutInitWindowPosition(100,100);
glutCreateWindow("Triangle");
glutDisplayFunc(display);
myinit();
glutMainLoop();
return 0;
}